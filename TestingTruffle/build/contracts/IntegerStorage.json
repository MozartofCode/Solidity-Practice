{
  "contractName": "IntegerStorage",
  "abi": [
    {
      "inputs": [],
      "name": "storageValue",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "_newValue",
          "type": "int256"
        }
      ],
      "name": "setValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getValue",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getValue\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_newValue\",\"type\":\"int256\"}],\"name\":\"setValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storageValue\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/testTruffle.sol\":\"IntegerStorage\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/testTruffle.sol\":{\"keccak256\":\"0x20fd8eea6fd380fef6201fbfd243bd4214f8784a197b91706116fecef052c620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f9d7c4ddf4959da42e0b1ce30e647035775deaa8ae82d32efb9c88da6d11e4a\",\"dweb:/ipfs/QmV2daCpV645dYn3Ug6BTHf4V3oyKk682CfFWjucgnVLb7\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610176806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806320965255146100465780635093dc7d14610064578063a977a97314610080575b600080fd5b61004e61009e565b60405161005b9190610104565b60405180910390f35b61007e600480360381019061007991906100cc565b6100a7565b005b6100886100b1565b6040516100959190610104565b60405180910390f35b60008054905090565b8060008190555050565b60005481565b6000813590506100c681610129565b92915050565b6000602082840312156100de57600080fd5b60006100ec848285016100b7565b91505092915050565b6100fe8161011f565b82525050565b600060208201905061011960008301846100f5565b92915050565b6000819050919050565b6101328161011f565b811461013d57600080fd5b5056fea2646970667358221220085b26cbcac3280ff253c0677b086fcbcd5013983a86c3536157e3a2d924dc3f64736f6c63430008020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806320965255146100465780635093dc7d14610064578063a977a97314610080575b600080fd5b61004e61009e565b60405161005b9190610104565b60405180910390f35b61007e600480360381019061007991906100cc565b6100a7565b005b6100886100b1565b6040516100959190610104565b60405180910390f35b60008054905090565b8060008190555050565b60005481565b6000813590506100c681610129565b92915050565b6000602082840312156100de57600080fd5b60006100ec848285016100b7565b91505092915050565b6100fe8161011f565b82525050565b600060208201905061011960008301846100f5565b92915050565b6000819050919050565b6101328161011f565b811461013d57600080fd5b5056fea2646970667358221220085b26cbcac3280ff253c0677b086fcbcd5013983a86c3536157e3a2d924dc3f64736f6c63430008020033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:966:1",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "58:86:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "68:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "90:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "77:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "77:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "68:5:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "132:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "106:25:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "106:32:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "106:32:1"
                }
              ]
            },
            "name": "abi_decode_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "36:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "44:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "52:5:1",
                "type": ""
              }
            ],
            "src": "7:137:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "215:195:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "261:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "273:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "263:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "263:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "263:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "236:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "245:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "232:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "232:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "257:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "228:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "228:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "225:2:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "287:116:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "302:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "316:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "306:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "331:62:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "365:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "376:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "361:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "361:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "385:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_int256",
                          "nodeType": "YulIdentifier",
                          "src": "341:19:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "341:52:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "331:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "185:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "196:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "208:6:1",
                "type": ""
              }
            ],
            "src": "150:260:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "479:52:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "496:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "518:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_int256",
                          "nodeType": "YulIdentifier",
                          "src": "501:16:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "501:23:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "489:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "489:36:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "489:36:1"
                }
              ]
            },
            "name": "abi_encode_t_int256_to_t_int256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "467:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "474:3:1",
                "type": ""
              }
            ],
            "src": "416:115:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "633:122:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "643:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "655:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "666:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "651:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "651:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "643:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "721:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "734:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "745:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "730:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "730:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_int256_to_t_int256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "679:41:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "679:69:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "679:69:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "605:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "617:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "628:4:1",
                "type": ""
              }
            ],
            "src": "537:218:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "805:32:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "815:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "826:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "815:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "787:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "797:7:1",
                "type": ""
              }
            ],
            "src": "761:76:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "885:78:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "941:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "950:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "953:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "943:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "943:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "943:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "908:5:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "932:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_int256",
                              "nodeType": "YulIdentifier",
                              "src": "915:16:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "915:23:1"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "905:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "905:34:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "898:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "898:42:1"
                  },
                  "nodeType": "YulIf",
                  "src": "895:2:1"
                }
              ]
            },
            "name": "validator_revert_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "878:5:1",
                "type": ""
              }
            ],
            "src": "843:120:1"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_int256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "62:243:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "62:243:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;218:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;127:83;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;95:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;218:84;259:3;282:12;;275:19;;218:84;:::o;127:83::-;193:9;178:12;:24;;;;127:83;:::o;95:23::-;;;;:::o;7:137:1:-;;90:6;77:20;68:29;;106:32;132:5;106:32;:::i;:::-;58:86;;;;:::o;150:260::-;;257:2;245:9;236:7;232:23;228:32;225:2;;;273:1;270;263:12;225:2;316:1;341:52;385:7;376:6;365:9;361:22;341:52;:::i;:::-;331:62;;287:116;215:195;;;;:::o;416:115::-;501:23;518:5;501:23;:::i;:::-;496:3;489:36;479:52;;:::o;537:218::-;;666:2;655:9;651:18;643:26;;679:69;745:1;734:9;730:17;721:6;679:69;:::i;:::-;633:122;;;;:::o;761:76::-;;826:5;815:16;;805:32;;;:::o;843:120::-;915:23;932:5;915:23;:::i;:::-;908:5;905:34;895:2;;953:1;950;943:12;895:2;885:78;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.2;\r\n\r\ncontract IntegerStorage {\r\n\r\n    int public storageValue;\r\n\r\n    function setValue(int _newValue) public {\r\n        storageValue = _newValue;\r\n    }\r\n\r\n    function getValue() public view returns (int) {\r\n        return storageValue;\r\n    }\r\n}\r\n\r\n\r\n",
  "sourcePath": "C:\\Users\\berta\\Desktop\\Solidity-Practice\\TestingTruffle\\contracts\\testTruffle.sol",
  "ast": {
    "absolutePath": "project:/contracts/testTruffle.sol",
    "exportedSymbols": {
      "IntegerStorage": [
        22
      ]
    },
    "id": 23,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 22,
        "linearizedBaseContracts": [
          22
        ],
        "name": "IntegerStorage",
        "nameLocation": "71:14:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "a977a973",
            "id": 3,
            "mutability": "mutable",
            "name": "storageValue",
            "nameLocation": "106:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 22,
            "src": "95:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 2,
              "name": "int",
              "nodeType": "ElementaryTypeName",
              "src": "95:3:0",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 12,
              "nodeType": "Block",
              "src": "167:43:0",
              "statements": [
                {
                  "expression": {
                    "id": 10,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8,
                      "name": "storageValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "178:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9,
                      "name": "_newValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "193:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "178:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 11,
                  "nodeType": "ExpressionStatement",
                  "src": "178:24:0"
                }
              ]
            },
            "functionSelector": "5093dc7d",
            "id": 13,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setValue",
            "nameLocation": "136:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5,
                  "mutability": "mutable",
                  "name": "_newValue",
                  "nameLocation": "149:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 13,
                  "src": "145:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "145:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "144:15:0"
            },
            "returnParameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "167:0:0"
            },
            "scope": 22,
            "src": "127:83:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 20,
              "nodeType": "Block",
              "src": "264:38:0",
              "statements": [
                {
                  "expression": {
                    "id": 18,
                    "name": "storageValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3,
                    "src": "282:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 17,
                  "id": 19,
                  "nodeType": "Return",
                  "src": "275:19:0"
                }
              ]
            },
            "functionSelector": "20965255",
            "id": 21,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValue",
            "nameLocation": "227:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "235:2:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "259:3:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "259:3:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "258:5:0"
            },
            "scope": 22,
            "src": "218:84:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 23,
        "src": "62:243:0"
      }
    ],
    "src": "35:276:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.2+commit.661d1103.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x95c7A677B52D47d7aCEc019168ccb3ED5b0Ab658",
      "transactionHash": "0x83c37fcb24f87739f91a2c70ec299ae4273042ec19cd83f3b161a5bcca5d031a"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-06-17T07:37:04.912Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}